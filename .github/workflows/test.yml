name: Release Dry Run

on:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.release }}
    steps:
      - uses: actions/checkout@v2

      - name: Set release
        id: semrel
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allow-initial-development-versions: true
          force-bump-patch-version: true
          dry: true
          custom-arguments: "--no-ci"

      - name: Output release
        id: release
        run: echo "::set-output name=release::${{ steps.semrel.outputs.version }}"

  publish_python:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: release

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y --version 1.4.2

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        working-directory: python
        run: poetry install

      - name: Bump version
        working-directory: python
        run: poetry version ${{ needs.release.outputs.version }}

      - name: Build package
        working-directory: python
        run: make build

      - name: Publish package
        working-directory: python
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.CLIENT_PROTO_PYPI_TOKEN }}
        run: poetry publish --dry-run
